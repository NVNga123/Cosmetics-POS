import { useState, useEffect } from 'react';
import './dashboard.css';
import {saleReportApi} from "../../api/salesReportAPI.ts";
import type {reportSumary} from "../../types/report.ts";

interface DashboardStats {
  totalUsers: number;
  totalProducts: number;
  totalOrders: number;
  totalRevenue: number;
  todayOrders: number;
  pendingOrders: number;
}

interface RecentActivity {
  id: number;
  type: 'user' | 'order' | 'product';
  message: string;
  time: string;
  icon: string;
}

export const Dashboard = () => {
  const [stats, setStats] = useState<DashboardStats>({
    totalUsers: 1250,
    totalProducts: 340,
    totalOrders: 0,
    totalRevenue: 0,
    todayOrders: 23,
    pendingOrders: 5
  });

  useEffect(() => {
    const fetchReportData = async () => {
      try {
        const res = await saleReportApi.getAllReport();
        const data: reportSumary = res?.data;

        if (data) {
          setStats((prev) => ({
            ...prev,
            totalOrders: data.totalOrders ?? 0,
            totalRevenue: data.totalRevenueDisplay ?? 0,
            totalProducts: data.totalQuantityProduct ?? 0,
          }));
        }
      } catch (error) {
        console.error("L·ªói khi l·∫•y d·ªØ li·ªáu b√°o c√°o:", error);
      }
    };

    fetchReportData();
  }, []);

  const [recentActivities] = useState<RecentActivity[]>([
    {
      id: 1,
      type: 'order',
      message: 'ƒê∆°n h√†ng m·ªõi t·ª´ Nguy·ªÖn Th·ªã Lan',
      time: '5 ph√∫t tr∆∞·ªõc',
      icon: 'üõí'
    },
    {
      id: 2,
      type: 'user',
      message: 'Ng∆∞·ªùi d√πng m·ªõi ƒëƒÉng k√Ω: tranhung123',
      time: '12 ph√∫t tr∆∞·ªõc',
      icon: 'üë§'
    },
    {
      id: 3,
      type: 'product',
      message: 'S·∫£n ph·∫©m "Son YSL Rouge" s·∫Øp h·∫øt h√†ng',
      time: '25 ph√∫t tr∆∞·ªõc',
      icon: '‚ö†Ô∏è'
    },
    {
      id: 4,
      type: 'order',
      message: 'ƒê∆°n h√†ng #DH123 ƒë√£ ƒë∆∞·ª£c thanh to√°n',
      time: '1 gi·ªù tr∆∞·ªõc',
      icon: 'üí∞'
    }
  ]);

  const formatMillion = (value: number) => {
    return `${value.toLocaleString("vi-VN", { maximumFractionDigits: 2 })} tri·ªáu`;
  };

  const statsCards = [
    {
      title: 'T·ªïng ng∆∞·ªùi d√πng',
      value: stats.totalUsers.toLocaleString(),
      icon: 'üë•',
      color: 'primary',
      change: '+12%',
      changeType: 'increase'
    },
    {
      title: 'T·ªïng s·∫£n ph·∫©m',
      value: stats.totalProducts.toLocaleString(),
      icon: 'üíÑ',
      color: 'success',
      change: '+8%',
      changeType: 'increase'
    },
    {
      title: 'T·ªïng ƒë∆°n h√†ng',
      value: stats.totalOrders.toLocaleString(),
      icon: 'üì¶',
      color: 'info',
      change: '+15%',
      changeType: 'increase'
    },
    {
      title: 'Doanh thu',
      value: formatMillion(stats.totalRevenue),
      icon: 'üí∞',
      color: 'warning',
      change: '+23%',
      changeType: 'increase'
    }
  ];

  const quickActions = [
    {
      title: 'Th√™m s·∫£n ph·∫©m',
      description: 'Th√™m s·∫£n ph·∫©m m·ªõi v√†o c·ª≠a h√†ng',
      icon: '‚ûï',
      color: 'primary',
      href: '/admin/products/new'
    },
    {
      title: 'Qu·∫£n l√Ω ƒë∆°n h√†ng',
      description: 'Xem v√† x·ª≠ l√Ω ƒë∆°n h√†ng',
      icon: 'üìã',
      color: 'success',
      href: '/admin/orders'
    },
    {
      title: 'Th·ªëng k√™ b√°n h√†ng',
      description: 'Xem b√°o c√°o v√† ph√¢n t√≠ch',
      icon: 'üìä',
      color: 'info',
      href: '/admin/reports'
    },
    {
      title: 'C√†i ƒë·∫∑t h·ªá th·ªëng',
      description: 'C·∫•u h√¨nh c√°c t√πy ch·ªçn',
      icon: '‚öôÔ∏è',
      color: 'secondary',
      href: '/admin/settings'
    }
  ];

  return (
      <div className="dashboard">
        {/* Welcome Section */}
        <div className="dashboard-welcome">
          <div className="welcome-content">
            <h1 className="welcome-title">
              Ch√†o m·ª´ng tr·ªü l·∫°i! üëã
            </h1>
            <p className="welcome-subtitle">
              ƒê√¢y l√† t·ªïng quan v·ªÅ ho·∫°t ƒë·ªông kinh doanh c·ªßa b·∫°n h√¥m nay.
            </p>
          </div>
          <div className="welcome-stats">
            <div className="today-stat">
              <span className="stat-label">ƒê∆°n h√†ng h√¥m nay</span>
              <span className="stat-value">{stats.todayOrders}</span>
            </div>
            <div className="today-stat">
              <span className="stat-label">ƒê∆°n ch·ªù x·ª≠ l√Ω</span>
              <span className="stat-value pending">{stats.pendingOrders}</span>
            </div>
          </div>
        </div>

        {/* Stats Cards */}
        <div className="stats-grid">
          {statsCards.map((card, index) => (
              <div key={index} className={`stat-card stat-card-${card.color}`}>
                <div className="stat-card-header">
                  <div className="stat-icon">
                    {card.icon}
                  </div>
                  <div className={`stat-change ${card.changeType}`}>
                    {card.change}
                  </div>
                </div>
                <div className="stat-card-body">
                  <h3 className="stat-value">{card.value}</h3>
                  <p className="stat-title">{card.title}</p>
                </div>
              </div>
          ))}
        </div>

        <div className="dashboard-content">
          {/* Quick Actions */}
          <div className="dashboard-section">
            <div className="section-header">
              <h2 className="section-title">Thao t√°c nhanh</h2>
              <p className="section-subtitle">C√°c h√†nh ƒë·ªông th∆∞·ªùng d√πng nh·∫•t</p>
            </div>

            <div className="quick-actions-grid">
              {quickActions.map((action, index) => (
                  <div key={index} className={`quick-action-card action-${action.color}`}>
                    <div className="action-icon">
                      {action.icon}
                    </div>
                    <div className="action-content">
                      <h3 className="action-title">{action.title}</h3>
                      <p className="action-description">{action.description}</p>
                    </div>
                    <button className="action-button btn btn-sm btn-primary">
                      Th·ª±c hi·ªán ‚Üí
                    </button>
                  </div>
              ))}
            </div>
          </div>

          {/* Recent Activities */}
          <div className="dashboard-section">
            <div className="section-header">
              <h2 className="section-title">Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y</h2>
              <p className="section-subtitle">C√°c s·ª± ki·ªán m·ªõi nh·∫•t trong h·ªá th·ªëng</p>
            </div>

            <div className="activity-list card">
              {recentActivities.map((activity) => (
                  <div key={activity.id} className="activity-item">
                    <div className="activity-icon">
                      {activity.icon}
                    </div>
                    <div className="activity-content">
                      <p className="activity-message">{activity.message}</p>
                      <span className="activity-time">{activity.time}</span>
                    </div>
                  </div>
              ))}
            </div>
          </div>
        </div>
      </div>
  );
};